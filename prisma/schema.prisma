datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

  model Doctor {
    id         String         @id @default(auto()) @map("_id") @db.ObjectId
    name       String
    profession String
    details    DoctorDetails[]
  }

model DoctorDetails {
  id         String         @id @default(auto()) @map("_id") @db.ObjectId
  details    String
  doctorId   String         @db.ObjectId
  doctor     Doctor         @relation(fields: [doctorId], references: [id])
  @@index([id], name: "doctorId")
}

model Patient {
  id         String         @id @default(auto()) @map("_id") @db.ObjectId
  name       String 
  age        Int
  gender     String
  visits     visit[]
  @@unique([name, age, gender]) // Adding a unique constraint based on name, age, and gender
}

model visit{
  id  String         @id @default(auto()) @map("_id") @db.ObjectId
  date DateTime @unique
  patientId String @db.ObjectId
  patient   Patient   @relation(fields:[patientId],references: [id], onDelete: Cascade)
  patientDetails PatientDetails[]
  prescriptions Prescriptions[]
  visitDetails  VisitDetail[]
}
model PatientDetails {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  details       String
  detailHeading String
  visitId        String       @db.ObjectId
  visit        visit          @relation(fields:[visitId],references: [id],  onDelete: Cascade)    
  @@index([id], name: "patientDetailsId")
  @@unique([detailHeading,visitId])
}
model Prescriptions {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  prescription  String    
  visitId        String       @db.ObjectId
  visit        visit          @relation(fields:[visitId],references: [id],  onDelete: Cascade)
  // @@index([id], name: "prescriptionId")
}


model VisitDetailTitle {
  id     String         @id @default(auto()) @map("_id") @db.ObjectId
  title  String     @unique
  visitDetails VisitDetail[]
}

model VisitDetail {
  id                 String         @id @default(auto()) @map("_id") @db.ObjectId
  titleId            String         @db.ObjectId
  description        String
  visitId            String         @db.ObjectId

  visitDetailTitle   VisitDetailTitle @relation(fields: [titleId], references: [id], onDelete: Cascade)
  visit              visit          @relation(fields:[visitId],references: [id],  onDelete: Cascade)

  @@unique([titleId,visitId])
}

model detailsLayout {
  id      Int   @id @map("_id")
  layout            String 
} 



